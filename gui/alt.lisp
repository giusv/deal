(defprod element (alt ((default element) &rest (elements (list named-element))))
  (to-list () `(alt (:default ,(synth to-list default) :elements ,(synth-all to-list elements))))
  ;; (to-req (path)
  ;;         (funcall #'vcat 
  ;;       	   (text "Tale elemento mostra, a seconda dell'URL, una tra le seguenti alternative:")
  ;;       	   (nest 4 (apply #'vcat (synth-all to-req (cons default elements) path)))))
  (to-html (path)
	   (multitags 
                  (text "Tale elemento mostra, a seconda dell'URL, una alternativa della lista")
                  (if (not elements) (text " vuota") (text " seguente:"))
		  (apply #'ul nil ;; (list :class 'list-group)
			 (listify (synth to-html default path)) 
			 (mapcar #'listify (synth-all to-brief elements path)))))
  (to-brief (path) (synth to-html (apply #'alt default elements) path))
  (toplevel () (apply #'append (synth-all toplevel elements)))
  (req (path) (apply #'append (synth-all req (cons default elements) path))))
