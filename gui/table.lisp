(defprod element (table ((id string)
			 (query query)
			 (render function)))
  (to-list () `(table (:id ,id :query ,(synth to-list query) :render ,render)))
  (to-req (path)
	  (let* ((sch (synth schema query)) 
		(fields (pairlis sch (synth-all to-req (apply render sch) path))))
	    (apply #'vcat 
		   (text "Tabella con i seguenti campi:") 
		   (mapcar #'(lambda (pair)
			       (nest 4 (hcat (text "~a: " (car pair)) (cdr pair))))
			   fields))))
  (to-html (path)
	   (let* ((sch (synth schema query)) 
		(fields (pairlis sch (synth-all to-html (apply render sch) path))))
	     (apply #'div nil 
		    (text "Tabella ") 
		    (if (not  fields) (text "vuota") (text "con i seguenti campi:"))
		    (mapcar #'listify 
			    (mapcar #'(lambda (pair)
					(text "~a: " (car pair)) (cdr pair))
				    fields))))))
