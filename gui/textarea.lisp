(defprod element (gui-textarea ((name string)
                                (label expression)
                                &key (init (init expression))
                                (model (model expression))))
  (to-list () `(gui-textarea (:name ,name :label ,(synth to-list label) :init ,(synth to-list init) :model ,model)))
  (to-html (path) (multitags (text "Area di testo identificata come")
                             (span-color (lower-camel name))
                             (text " etichettata con ")
                             (synth to-html label) 
                             (if init (dlist init (span nil (text "Valore iniziale")) (synth to-html init)))))
  (to-brief (path) (synth to-html (gui-textarea name label :init init :model model) path))
  (to-model () (jstring (value (gui-textarea name label :init init :model model))))
  (toplevel () nil)
  (req (path) nil)
  (template (&optional father) (textarea (list :class "form-control" :id (lower-camel name) 
                                               :|[(ngModel)]| (let ((prefix (if father 
                                                                                (symb father ".")
                                                                                (symb ""))))
                                                                (lower-camel (symb prefix (if model model name))))
                                               :name (lower-camel name)
                                               :placeholder (synth to-string (synth template init) 0)))))

(defmacro textarea* (label &key init model)
  `(gui-textarea (gensym "TEXTAREA") ,label :init ,init :model ,model))
