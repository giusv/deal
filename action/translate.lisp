(defaction (translate ((source filter)
                       (target variable)
                       (result variable)))
    (to-list () `(translate (:source  ,(synth to-list source) :target ,(synth to-list target) :result ,(synth to-list result) :pre ,(synth to-list pre) :post ,(synth to-list post))))
  (to-html () (multitags 
               (text "Sia ") 
               (synth to-html result) 
               (text " il risultato della compilazione di")
               (synth to-html source)
               (dlist pre (text "Precondizione: ") (synth to-html pre)
                      post (text "Postcondizione:") (synth to-html post)))))

(defun translate2 (source &key pre post)
  (let ((result (variab (gensym))))
    (values (translate source nil result :pre pre :post post) result)))
